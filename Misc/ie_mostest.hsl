/*****************************************************************************
* ie_tis.hsl - Created by fearless
* 
* Structure definitions for the Infinity Engine .mos file format 

* For use with BreakPoint HexWorkshop (http://www.hexworkshop.com)
*
*****************************************************************************
* Revision History:
*
* 01/02/11 - fearless - Original creation
*
*****************************************************************************/
 
#include "standard-types.hsl"

#pragma displayname("Infinity Engine MOS File Format") ;
#pragma fileextensions(".mos") ;
#pragma byteorder(little_endian);



/*****************************************************************************
* RGBQUAD Entry Data Type Definition
*****************************************************************************/
#pragma hide()
typedef struct RGBQUAD
{
	DWORD ARGB;

} RGBQUAD ;



/*****************************************************************************
* Actual MOS File Structure as defined
*****************************************************************************/
#pragma show()
struct MOS_V1_HEADER
{
	#pragma lockAt(0)
	CHAR Signature[4]; // MOS
	#pragma verify match_var_int("Signature[0]", "0x4D")
	#pragma verify match_var_int("Signature[1]", "0x4F")
    #pragma verify match_var_int("Signature[2]", "0x53")
	#pragma verify match_var_int("Signature[3]", "0x20")
    
	CHAR Version[4]; // V1
	#pragma verify match_var_int("Version[0]", "0x56")
    #pragma verify match_var_int("Version[1]", "0x31")
    #pragma verify match_var_int("Version[2]", "0x20")
    #pragma verify match_var_int("Version[3]", "0x20")

	WORD Width;
	WORD Height;
    WORD Columns;
    WORD Rows;
    DWORD BlockSize;
    DWORD PailettesOffset;

    //RGBQUAD MOSPalette[256];
    //DWORD TileOffsets[Columns * Rows];

}; 

struct MOS_V1_PALETTE
{
    RGBQUAD MOSPalette[256];
};

typedef struct MOS_V1_TILEOFFSETS
{
    UWord Columns = MOS_V1_Header.Columns;
    UWord Rows ;
    //Columns = MOS_V1_Header.Columns; //__getUWordAt(0x0C);
    Rows = MOS_V1_Header.Rows; //__getUWordAt(0x0E);
    DWORD TileOffsets[Columns * Rows];
};
typedef struct MOS_V1_TILEDATA
{
    blob MOS_V1_TileData[__getDocSize() - ( __getAddrOf(MOS_V1_TileOffsets) + __getSizeOf(MOS_V1_TileOffsets) )];
};

function AutoParse_MOS_V1
{
    UQWord pos = 0 ;
    UQWord end = __getDocSize() ;

    pos += __addStructureAt(pos, "MOS_V1_HEADER", "MOS_V1_Header") ;
    //pos = 20;
    pos = __getUDwordAt(0x14)
    pos += __addStructureAt(pos, "MOS_V1_PALETTE", "MOS_V1_Palette") ;
    pos += __addStructureAt(pos, "MOS_V1_TILEOFFSETS", "MOS_V1_TileOffsets") ;
    pos += __addStructureAt(pos, "MOS_V1_TILEDATA", "") ;
}
